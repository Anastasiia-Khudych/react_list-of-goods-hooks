{"version":3,"sources":["types/sortTypes.ts","components/goodsList/GoodsList.tsx","components/goodsListWrapper/GoodsListWrapper.tsx","App.tsx","index.tsx"],"names":["SortType","GoodsList","props","visibleGoods","goods","sortType","isReversed","reorderedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","NONE","reverse","getReorderedGoods","map","good","GoodsListWrapper","useState","setSortType","setReverseValue","isGoodsChanged","handleSortButtonClick","sortingParam","className","type","classNames","onClick","currentState","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,qEAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,uBCqCCC,EAA6B,SAACC,GACzC,IAEMC,EA9BkB,SACxBC,EACAC,EACAC,GAEA,IAAMC,EAAc,YAAOH,GAmB3B,OAjBAG,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQL,GACN,KAAKL,EAASW,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKV,EAASa,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,KAAKd,EAASe,KAEd,QACE,OAAO,MAITT,GACFC,EAAeS,UAGVT,EAMcU,CAFmBf,EAAhCE,MAAgCF,EAAzBG,SAAyBH,EAAfI,YAIzB,OACE,6BACGH,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SCnCnBC,EAAoC,SAAClB,GAChD,IAAQE,EAAUF,EAAVE,MAER,EAAgCiB,mBAASrB,EAASe,MAAlD,mBAAOV,EAAP,KAAiBiB,EAAjB,KACA,EAAsCD,oBAAS,GAA/C,mBAAOf,EAAP,KAAmBiB,EAAnB,KACMC,EAA0BnB,IAAaL,EAASe,OAChC,IAAfT,EAEDmB,EAAwB,SAACC,GAC7BJ,EAAYI,IAYd,OACE,qCACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYxB,IAAaL,EAASW,WAGtCmB,QAAS,WACPL,EAAsBzB,EAASW,WAVnC,iCAgBA,wBACEiB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYxB,IAAaL,EAASa,SAGtCiB,QAAS,WACPL,EAAsBzB,EAASa,SAVnC,4BAgBA,wBACEe,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAavB,IAGjBwB,QArDyB,WAC/BP,GAAgB,SAACQ,GAAD,OAAmBA,MA2C/B,qBAcCP,GACC,wBACEI,KAAK,SACLD,UAAU,4BACVG,QA1DqB,WAC7BR,EAAYtB,EAASe,MACrBQ,GAAgB,IAqDV,sBAUJ,cAAC,EAAD,CACEnB,MAAOA,EACPC,SAAUA,EACVC,WAAYA,QCzFP0B,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,OACE,qBAAKN,UAAU,kBAAf,SACE,cAAC,EAAD,CAAkBvB,MAAO4B,OClB/BE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8c0ddcf5.chunk.js","sourcesContent":["export enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport { SortType } from '../../types/sortTypes';\n\ntype Props = {\n  goods: string[];\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nconst getReorderedGoods = (\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) => {\n  const reorderedGoods = [...goods];\n\n  reorderedGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.NONE:\n        return 0;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    reorderedGoods.reverse();\n  }\n\n  return reorderedGoods;\n};\n\nexport const GoodsList: React.FC<Props> = (props: Props) => {\n  const { goods, sortType, isReversed } = props;\n\n  const visibleGoods = getReorderedGoods(goods, sortType, isReversed);\n\n  return (\n    <ul>\n      {visibleGoods.map(good => (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport { SortType } from '../../types/sortTypes';\nimport { GoodsList } from '../goodsList';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsListWrapper: React.FC<Props> = (props: Props) => {\n  const { goods } = props;\n\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverseValue] = useState(false);\n  const isGoodsChanged: boolean = sortType !== SortType.NONE\n      || isReversed !== false;\n\n  const handleSortButtonClick = (sortingParam : SortType) => {\n    setSortType(sortingParam);\n  };\n\n  const handleReverseButtonClick = () => {\n    setReverseValue((currentState) => !currentState);\n  };\n\n  const handleResetButtonClick = () => {\n    setSortType(SortType.NONE);\n    setReverseValue(false);\n  };\n\n  return (\n    <>\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => {\n            handleSortButtonClick(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => {\n            handleSortButtonClick(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={handleReverseButtonClick}\n        >\n          Reverse\n        </button>\n\n        {isGoodsChanged && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetButtonClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList\n        goods={goods}\n        sortType={sortType}\n        isReversed={isReversed}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsListWrapper } from './components/goodsListWrapper';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"section content\">\n      <GoodsListWrapper goods={goodsFromServer} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}